plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.terraformersmc.com/releases" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.isxander.dev/releases" }
    maven { url "https://maven.isxander.dev/snapshots" } //For minecraft snapshots

}

loom {
    accessWidenerPath = file("src/main/resources/skymatrix.accesswidener")
}
dependencies {
    implementation files("libs/baritone-api-1.10.1.jar")
    implementation 'com.alibaba:fastjson:2.0.28'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '5.0.0-alpha.11'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"


    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // Mod Menu
    modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
    // REI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    // EMI
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"

    modImplementation("net.fabricmc:fabric-language-kotlin:1.10.17+kotlin.1.9.22")
}

base {
    archivesName = project.archives_base_name
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
    from {
        configurations.compileClasspath.findAll {
            it.name.contains("fastjson") ||
                    it.name.contains("jackson") ||
                    it.name.contains("kotlin-stdlib") ||
                    it.name.contains("okio") ||
                    it.name.contains("okhttp")
        }.collect {
            zipTree(it)
        }
    }
    manifest.attributes(

            "tweakClass": "cn.seiua.skymatrix.client.MyTweaker",
            "TweakOrder": 0,
    )
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = "utf-8"
}
tasks.withType(Javadoc).configureEach {
    options.encoding = "utf-8"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}